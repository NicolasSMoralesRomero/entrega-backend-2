<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carrito</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <h1 class="text-center mt-5">Productos en el Carrito</h1>

    <div id="cartItems" class="mt-4">
        {{#each cart}}
        <div class="cart-item mb-3 p-3 border rounded">
            <div class="d-flex justify-content-between align-items-center">
                <span><strong>{{this.title}}</strong> - Cantidad: <span
                        id="quantity-{{this.productId}}">{{this.quantity}}</span></span>
                <div>
                    <button onclick="updateQuantity('{{this.productId}}', 1)" class="btn btn-success btn-sm">+</button>
                    <button onclick="updateQuantity('{{this.productId}}', -1)" class="btn btn-warning btn-sm">-</button>
                    <button onclick="removeFromCart('{{this.productId}}')"
                        class="btn btn-danger btn-sm">Eliminar</button>
                </div>
            </div>
        </div>
        {{/each}}
    </div>

    <div class="total mt-4 p-3 border rounded">
        <h3>Total: $<span id="totalAmount">{{total}}</span></h3>
    </div>

    <div class="mt-4">
        <button onclick="clearCart()" class="btn btn-danger w-100 mb-3">Vaciar Carrito</button>
        <button onclick="purchaseCart()" class="btn btn-success w-100 mb-3">Finalizar Compra</button>
        <a href="/api/products" class="btn btn-primary w-100">Volver a la tienda</a>
    </div>

    <script>
        const cid = '{{cid}}';  // ID del carrito

        document.addEventListener("DOMContentLoaded", () => {
            const totalAmount = parseFloat(document.getElementById("totalAmount").textContent);
            const clearCartBtn = document.querySelector("button[onclick='clearCart()']");
            const purchaseCartBtn = document.querySelector("button[onclick='purchaseCart()']");

            if (totalAmount === 0) {
                clearCartBtn.disabled = true;
                purchaseCartBtn.disabled = true;
            }
        });

        function updateQuantity(productId, change) {
            fetch(`/api/carts/${cid}/product/${productId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ quantity: change })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        Swal.fire({
                            title: 'Cantidad actualizada',
                            icon: 'success',
                            timer: 800,
                            showConfirmButton: false
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'No se pudo actualizar la cantidad',
                            icon: 'error'
                        });
                    }
                });
        }

        function removeFromCart(productId) {
            fetch(`/api/carts/${cid}/product/${productId}`, {
                method: 'DELETE'
            })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        Swal.fire({
                            title: 'Producto eliminado',
                            icon: 'success',
                            timer: 800,
                            showConfirmButton: false
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'No se pudo eliminar el producto',
                            icon: 'error'
                        });
                    }
                });
        }

        function clearCart() {
            fetch(`/api/carts/${cid}/products`, { method: 'DELETE' })
                .then(response => {
                    if (response.ok) {
                        Swal.fire({
                            title: 'Carrito vacío',
                            icon: 'success',
                            timer: 800,
                            showConfirmButton: false
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'No se pudo vaciar el carrito',
                            icon: 'error'
                        });
                    }
                });
        }

        function purchaseCart() {
            fetch(`/api/carts/${cid}/purchase`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.ticket) {
                        Swal.fire({
                            title: 'Compra realizada con éxito',
                            text: `Código del ticket: ${data.ticket.code}`,
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        });

                        if (data.unprocessedProducts.length > 0) {
                            Swal.fire({
                                title: 'Algunos productos no tenían stock suficiente',
                                text: 'Se han excluido del pedido. Puedes intentar comprar nuevamente.',
                                icon: 'warning'
                            });

                            // Si quedaron productos sin stock, recargar la página para intentar otra compra
                            setTimeout(() => location.reload(), 2500);
                        } else {
                            // Si se compró todo el carrito, redirigir a /api/products
                            setTimeout(() => window.location.href = "/api/products", 2500);
                        }
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'No se pudo procesar la compra',
                            icon: 'error'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error en la compra:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Hubo un problema al procesar la compra',
                        icon: 'error'
                    });
                });
        }
    </script>
</body>

</html>