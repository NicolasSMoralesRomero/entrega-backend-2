<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{product.title}}</title>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script>
        function addToCart(productId) {
            fetch(`/api/carts/670457eadbee7b2e09aacd6f/product/${productId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ quantity: 1 })
            })
            .then(response => response.ok ? response.json() : Promise.reject('Error al agregar el producto al carrito'))
            .then(() => alert('Producto agregado al carrito'))
            .catch(error => alert(error));
        }

        function getBack() {
            window.location.href = `/api/products/`;
        }

        function deleteProduct(productId) {
            if (confirm('¿Estás seguro de eliminar este producto?')) {
                fetch(`/api/products/${productId}`, { method: 'DELETE' })
                .then(response => response.ok ? window.location.href = `/api/products/` : Promise.reject('Error al eliminar'))
                .catch(error => alert(`Error: ${error}`));
            }
        }

        function editProduct(productId) {
            const title = document.getElementById('editTitle').value;
            const description = document.getElementById('editDescription').value;
            const price = document.getElementById('editPrice').value;
            const stock = document.getElementById('editStock').value;
            const category = document.getElementById('editCategory').value;

            fetch(`/api/products/${productId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title, description, price, stock, category })
            })
            .then(response => response.ok ? window.location.reload() : Promise.reject('Error al actualizar'))
            .catch(error => alert(`Error: ${error}`));
        }
    </script>
</head>

<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h1 class="card-title">{{product.title}}</h1>
                        <p class="card-text">{{product.description}}</p>
                        <p class="card-text"><strong>Precio:</strong> ${{product.price}}</p>
                        <p class="card-text"><strong>Stock:</strong> {{product.stock}}</p>
                        <p class="card-text"><strong>Categoría:</strong> {{product.category}}</p>
                        
                        {{#unless isAdmin}}
                        <button onclick="addToCart('{{product._id}}')" class="btn btn-success">Agregar al carrito</button>
                        {{/unless}}
                        <button onclick="getBack()" class="btn btn-secondary">Volver</button>
                    </div>
                </div>
            </div>

            {{#if isAdmin}}
            <div class="col-md-6">
                <div class="card shadow-sm p-4">
                    <h2 class="text-center">Administración de Producto</h2>
                    <form onsubmit="event.preventDefault(); editProduct('{{product._id}}')">
                        <div class="mb-3">
                            <label for="editTitle" class="form-label">Título</label>
                            <input type="text" id="editTitle" class="form-control" value="{{product.title}}" required>
                        </div>
                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Descripción</label>
                            <textarea id="editDescription" class="form-control" rows="3" required>{{product.description}}</textarea>
                        </div>
                        <div class="mb-3">
                            <label for="editPrice" class="form-label">Precio</label>
                            <input type="number" id="editPrice" class="form-control" value="{{product.price}}" required>
                        </div>
                        <div class="mb-3">
                            <label for="editStock" class="form-label">Stock</label>
                            <input type="number" id="editStock" class="form-control" value="{{product.stock}}" required>
                        </div>
                        <div class="mb-3">
                            <label for="editCategory" class="form-label">Categoría</label>
                            <input type="text" id="editCategory" class="form-control" value="{{product.category}}" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Actualizar Producto</button>
                        <button type="button" class="btn btn-danger w-100 mt-2" onclick="deleteProduct('{{product._id}}')">Eliminar Producto</button>
                    </form>
                </div>
            </div>
            {{/if}}
        </div>
    </div>
</body>

</html>